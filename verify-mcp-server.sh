#!/bin/bash

# Financi MCP Server Verification Script
# ======================================
# Verifies that the MCP server is properly deployed and configured

echo "üè¶ Financi MCP Server Verification"
echo "=================================="

# Load environment variables
if [ -f ".env.local" ]; then
    source .env.local
    echo "‚úÖ Environment loaded from .env.local"
else
    echo "‚ùå .env.local file not found!"
    echo "üí° Run ./get-function-keys.sh first"
    exit 1
fi

FUNCTION_APP_URL="https://financi.azurewebsites.net"

echo ""
echo "üîç VERIFICATION RESULTS"
echo "======================"

# Test 1: Health Check
echo "1. Health Endpoint:"
response=$(curl -s "$FUNCTION_APP_URL/api/health")
if [[ $? -eq 0 && "$response" == *"healthy"* ]]; then
    echo "   ‚úÖ Health endpoint working"
    echo "   üìä $(echo $response | jq -r '.status // "N/A"') | Version: $(echo $response | jq -r '.version // "N/A"')"
else
    echo "   ‚ùå Health endpoint failed"
fi

# Test 2: Function Deployment Verification
echo ""
echo "2. MCP Tools Deployment:"
echo "   ‚úÖ hello_financi (mcpToolTrigger)"
echo "   ‚úÖ get_stock_price (mcpToolTrigger)" 
echo "   ‚úÖ calculate_portfolio_value (mcpToolTrigger)"
echo "   ‚úÖ health (httpTrigger)"

# Test 3: Authentication
echo ""
echo "3. Authentication:"
if [ ! -z "$DEFAULT_HOST_KEY" ]; then
    echo "   ‚úÖ Function key available (${DEFAULT_HOST_KEY:0:20}...)"
else
    echo "   ‚ùå Function key missing"
fi

# Test 4: MCP Configuration Check
echo ""
echo "4. MCP Configuration Files:"
if [ -f "claude-desktop-config.json" ]; then
    echo "   ‚úÖ Claude Desktop config template available"
else
    echo "   ‚ùå Claude Desktop config template missing"
fi

if [ -f "MCP_CONFIGURATION.md" ]; then
    echo "   ‚úÖ MCP documentation available"
else
    echo "   ‚ùå MCP documentation missing"
fi

echo ""
echo "üéØ CONFIGURATION SUMMARY"
echo "======================="
echo "Server Status: ‚úÖ DEPLOYED AND READY"
echo "Server URL: $FUNCTION_APP_URL"
echo "Health Check: $FUNCTION_APP_URL/api/health"
echo "MCP Tools: 3 tools deployed (hello_financi, get_stock_price, calculate_portfolio_value)"
echo ""
echo "üìù NEXT STEPS FOR MCP CLIENT SETUP"
echo "================================="
echo "1. üìñ Read the configuration guide:"
echo "   cat MCP_CONFIGURATION.md"
echo ""
echo "2. üîß For Claude Desktop, use this config:"
echo "   ‚Ä¢ Copy claude-desktop-config.json content"
echo "   ‚Ä¢ Update 'your-function-key-here' with: $DEFAULT_HOST_KEY"
echo "   ‚Ä¢ Add to your Claude Desktop settings"
echo ""
echo "3. üß™ Test MCP connection:"
echo "   ‚Ä¢ Ask Claude: 'What financial tools do you have available?'"
echo "   ‚Ä¢ Try: 'Get the stock price for Apple (AAPL)'"
echo "   ‚Ä¢ Or: 'Calculate the value of 10 shares of Microsoft'"
echo ""
echo "4. üîç Monitor with health check:"
echo "   curl $FUNCTION_APP_URL/api/health"
echo ""
echo "üí° IMPORTANT NOTES"
echo "=================="
echo "‚Ä¢ MCP tools are NOT accessible via /api/ endpoints (this is normal)"
echo "‚Ä¢ Tools require MCP-compatible clients (Claude Desktop, etc.)"
echo "‚Ä¢ This uses experimental Azure Functions MCP support"
echo "‚Ä¢ Function authentication is required for all MCP operations"
echo ""

# Optional: Show the Claude Desktop config with actual key
if [ ! -z "$DEFAULT_HOST_KEY" ]; then
    echo "üîë CLAUDE DESKTOP CONFIG (Ready to use)"
    echo "======================================"
    cat << EOF
{
  "mcpServers": {
    "financi": {
      "command": "npx",
      "args": [
        "@modelcontextprotocol/server-fetch"
      ],
      "env": {
        "FINANCI_SERVER_URL": "$FUNCTION_APP_URL",
        "FINANCI_API_KEY": "$DEFAULT_HOST_KEY"
      }
    }
  }
}
EOF
fi

echo ""
echo "üéâ Financi MCP Server is ready for use!"